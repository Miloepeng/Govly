services:
  backend:
    build:
      context: ./govly-web/backend
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - SEA_LION_API_KEY=${SEA_LION_API_KEY}
      - SEA_LION_RETRIES=${SEA_LION_RETRIES:-5}
      - SEA_LION_TIMEOUT=${SEA_LION_TIMEOUT:-90}
      - SEA_LION_FALLBACK_MODEL=${SEA_LION_FALLBACK_MODEL:-}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - USE_LLAMA_INDEX=${USE_LLAMA_INDEX:-true}
      - SUPABASE_CHUNKS_TABLE=${SUPABASE_CHUNKS_TABLE:-chunks}
      - SUPABASE_FORMS_TABLE=${SUPABASE_FORMS_TABLE:-forms}
    volumes:
      - ./govly-web/backend/forms:/app/forms
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 120s
      timeout: 60s
      retries: 10
      start_period: 600s

  frontend:
    build:
      context: ./govly-web/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://backend:8000
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    ports:
      - "3000:3000"
    environment:
      # Frontend API URL (internal Docker network)
      - NEXT_PUBLIC_API_URL=http://backend:8000
      # Supabase configuration (must match .env file)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NODE_ENV=production
    env_file:
      - .env  # Explicitly reference the .env file
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "http=require('http');http.get('http://localhost:3000',r=>process.exit(r.statusCode<400?0:1)).on('error',()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 10

networks:
  default:
    name: govly-network 